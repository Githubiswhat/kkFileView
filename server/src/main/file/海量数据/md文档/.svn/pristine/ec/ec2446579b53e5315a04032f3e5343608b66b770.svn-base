##### 返回语句

###### RETURN

**语法格式**

返回语句的语法格式请参见下图。

 return_clause::=

<div align="left"><img src="image/RETURN语法.png" style="zoom:50%")</div>    

 

对以上语法的解释如下：

用于将控制从存储过程或函数返回给调用者。

**示例**

请参见章节“调用语句”的示例

###### RETURN NEXT及RETURN QUERY

**语法格式**

创建函数时需要指定返回值SETOF datatype。

return_next_clause::=

<div align="left"><img src="image/return_next_clause.jpg" style="zoom:50%")</div>     

return_query_clause::=

<div align="left"><img src="image/return_query_clause.jpg" style="zoom:50%")</div>    

**参数说明**

- RETURN NEXT：可用于标量和复合数据类型。

- RETURN QUERY：有一种变体RETURN QUERY EXECUTE，后面还可以增加动态查询，通过USING向查询插入参数。

> <div align="left"><img src="image/image1.png" style="zoom:25%")</div>   
>
> 当需要函数返回一个集合时，使用RETURN NEXT或者RETURN QUERY向结果集追加结果，然后继续执行函数的下一条语句。随着后续的RETURN NEXT或RETURN QUERY命令的执行，结果集中会有多个结果。函数执行完成后会一起返回所有结果。

**示例**

1、创建测试表并插入数据。

```
CREATE TABLE t1(a int); 
INSERT INTO t1 VALUES(1),(10); 
```

2、创建函数测试RETURN NEXT 。

```
CREATE OR REPLACE FUNCTION fun_for_return_next() RETURNS SETOF t1 AS $$ 
DECLARE 
  r t1%ROWTYPE; 
BEGIN 
  FOR r IN select * from t1 
  LOOP 
   RETURN NEXT r; 
  END LOOP; 
  RETURN; 
END; 
$$ LANGUAGE PLPgsql; 
```

3、调用函数

```
call fun_for_return_next(); 
```

结果显示如下：

```
 a 
--- 
 1 
 10 
(2 rows) 
```

 

4、创建函数测试RETURN QUERY 。

```
CREATE OR REPLACE FUNCTION fun_for_return_query() RETURNS SETOF t1 AS $$ 
DECLARE 
  r t1%ROWTYPE; 
BEGIN 
  RETURN QUERY select * from t1; 
END; 
$$ 
language plpgsql; 
```

调用函数

```
call fun_for_return_query(); 
```

结果显示如下：

```
 a 
--- 
 1 
 10 
(2 rows)
```

